generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgres"
    url      = "file:./db.sqlite"
    // url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    Post          Post[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Lookup {
    id            String          @id @default(cuid())
    name          String
    type          String
    PostTranslate PostTranslate[]
}

model Post {
    id            String          @id @default(cuid())
    title         String
    authorId      String
    author        User            @relation(fields: [authorId], references: [id])
    Topic         Topic?          @relation(fields: [topicId], references: [id])
    topicId       String?
    PostTranslate PostTranslate[]
}

model PostTranslate {
    id         String   @id @default(cuid())
    postId     String
    language   Lookup   @relation(fields: [languageId], references: [id])
    languageId String
    title      String
    content    String
    createdAt  DateTime
    updatedAt  DateTime
    post       Post     @relation(fields: [postId], references: [id])
}

model Topic {
    id   String @id @default(cuid())
    name String
    type String
    Post Post[]
}
